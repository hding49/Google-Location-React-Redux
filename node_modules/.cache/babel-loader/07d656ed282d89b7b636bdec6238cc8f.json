{"ast":null,"code":"var _jsxFileName = \"/Users/achilles/Documents/GitHub/Google-Location-React-Redux/src/views/components/location-map-show.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport { React, useEffect } from \"react\";\nimport style from \"../scss/location-map-show.module.scss\";\nimport { APIKey, initialLocation } from \"../../config/ConfigurationData\";\nimport { Loader } from \"@googlemaps/js-api-loader\"; //Loading google map using googlemaps js-api-loader\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleMapAPI = new Loader({\n  apiKey: APIKey,\n  language: \"English\"\n}); //Containers for instances created by google built-in constructors\n\nlet GoogleMap, Marker, MyInfoWindow;\n\nfunction LocationMapShow(props) {\n  _s();\n\n  // const mapRef = useRef(null);\n  useEffect(() => {\n    //Requesting data from google map api\n    GoogleMapAPI.load().then(() => {\n      //Initialize the map with arguments\n      GoogleMap = new window.google.maps.Map(document.getElementById(\"map\"), {\n        center: initialLocation,\n        zoom: 15\n      });\n\n      if (props.list.length > 0) {\n        console.log(props.list);\n        props.list.map((userLocationObj, index) => {\n          console.log(userLocationObj);\n          const location = {\n            lat: userLocationObj.lat,\n            lng: userLocationObj.lng\n          };\n\n          if (index === 0) {\n            //Center map on latest user location\n            GoogleMap.setCenter(location);\n          }\n\n          Marker = new window.google.maps.Marker({\n            position: location,\n            map: GoogleMap\n          });\n          MyInfoWindow = new window.google.maps.InfoWindow({\n            content: userLocationObj.address\n          });\n          MyInfoWindow.open(GoogleMap, Marker);\n          return new window.google.maps.Marker({\n            position: location,\n            map: GoogleMap\n          });\n        });\n      }\n    });\n  }, [props.list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style[\"location-map-container\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: style[\"location-map\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationMapShow, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = LocationMapShow;\nexport default connect(state => {\n  const {\n    list\n  } = state;\n  return {\n    list\n  };\n})(LocationMapShow);\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationMapShow\");","map":{"version":3,"sources":["/Users/achilles/Documents/GitHub/Google-Location-React-Redux/src/views/components/location-map-show.js"],"names":["connect","React","useEffect","style","APIKey","initialLocation","Loader","GoogleMapAPI","apiKey","language","GoogleMap","Marker","MyInfoWindow","LocationMapShow","props","load","then","window","google","maps","Map","document","getElementById","center","zoom","list","length","console","log","map","userLocationObj","index","location","lat","lng","setCenter","position","InfoWindow","content","address","open","state"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,gCAAxC;AACA,SAASC,MAAT,QAAuB,2BAAvB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG,IAAID,MAAJ,CAAW;AAC9BE,EAAAA,MAAM,EAAEJ,MADsB;AAE9BK,EAAAA,QAAQ,EAAE;AAFoB,CAAX,CAArB,C,CAKA;;AACA,IAAIC,SAAJ,EAAeC,MAAf,EAAuBC,YAAvB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AAEd;AACAK,IAAAA,YAAY,CAACQ,IAAb,GAAoBC,IAApB,CAAyB,MAAM;AAE7B;AACAN,MAAAA,SAAS,GAAG,IAAIO,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAA3B,EAA2D;AACrEC,QAAAA,MAAM,EAAElB,eAD6D;AAErEmB,QAAAA,IAAI,EAAE;AAF+D,OAA3D,CAAZ;;AAKA,UAAIV,KAAK,CAACW,IAAN,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACW,IAAlB;AACAX,QAAAA,KAAK,CAACW,IAAN,CAAWI,GAAX,CAAe,CAACC,eAAD,EAAkBC,KAAlB,KAA4B;AACzCJ,UAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ;AACA,gBAAME,QAAQ,GAAG;AAAEC,YAAAA,GAAG,EAAEH,eAAe,CAACG,GAAvB;AAA4BC,YAAAA,GAAG,EAAEJ,eAAe,CAACI;AAAjD,WAAjB;;AAEA,cAAIH,KAAK,KAAK,CAAd,EAAiB;AACf;AACArB,YAAAA,SAAS,CAACyB,SAAV,CAAoBH,QAApB;AACD;;AAEDrB,UAAAA,MAAM,GAAG,IAAIM,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBR,MAAvB,CAA8B;AACrCyB,YAAAA,QAAQ,EAAEJ,QAD2B;AAErCH,YAAAA,GAAG,EAAEnB;AAFgC,WAA9B,CAAT;AAKAE,UAAAA,YAAY,GAAG,IAAIK,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBkB,UAAvB,CAAkC;AAC/CC,YAAAA,OAAO,EAAER,eAAe,CAACS;AADsB,WAAlC,CAAf;AAIA3B,UAAAA,YAAY,CAAC4B,IAAb,CAAkB9B,SAAlB,EAA6BC,MAA7B;AAEA,iBAAO,IAAIM,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBR,MAAvB,CAA8B;AACnCyB,YAAAA,QAAQ,EAAEJ,QADyB;AAEnCH,YAAAA,GAAG,EAAEnB;AAF8B,WAA9B,CAAP;AAID,SAxBD;AAyBD;AAEF,KArCD;AAwCD,GA3CQ,EA2CN,CAACI,KAAK,CAACW,IAAP,CA3CM,CAAT;AA6CA,sBACE;AAAK,IAAA,SAAS,EAAEtB,KAAK,CAAC,wBAAD,CAArB;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,SAAS,EAAEA,KAAK,CAAC,cAAD;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArDQU,e;;KAAAA,e;AAuDT,eAAeb,OAAO,CAAEyC,KAAD,IAAW;AAChC,QAAM;AAAEhB,IAAAA;AAAF,MAAWgB,KAAjB;AACA,SAAO;AAAEhB,IAAAA;AAAF,GAAP;AACD,CAHqB,CAAP,CAGZZ,eAHY,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { React, useEffect} from \"react\";\nimport style from \"../scss/location-map-show.module.scss\";\nimport { APIKey, initialLocation } from \"../../config/ConfigurationData\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\n//Loading google map using googlemaps js-api-loader\nconst GoogleMapAPI = new Loader({\n  apiKey: APIKey,\n  language: \"English\",\n});\n\n//Containers for instances created by google built-in constructors\nlet GoogleMap, Marker, MyInfoWindow;\n\nfunction LocationMapShow(props) {\n  // const mapRef = useRef(null);\n\n  useEffect(() => {\n\n    //Requesting data from google map api\n    GoogleMapAPI.load().then(() => {\n\n      //Initialize the map with arguments\n      GoogleMap = new window.google.maps.Map(document.getElementById(\"map\"), {\n        center: initialLocation,\n        zoom: 15,\n      });\n\n      if (props.list.length > 0) {\n        console.log(props.list)\n        props.list.map((userLocationObj, index) => {\n          console.log(userLocationObj)\n          const location = { lat: userLocationObj.lat, lng: userLocationObj.lng };\n  \n          if (index === 0) {\n            //Center map on latest user location\n            GoogleMap.setCenter(location);\n          }\n\n          Marker = new window.google.maps.Marker({\n            position: location,\n            map: GoogleMap,\n          });\n\n          MyInfoWindow = new window.google.maps.InfoWindow({\n            content: userLocationObj.address,\n          });\n\n          MyInfoWindow.open(GoogleMap, Marker);\n  \n          return new window.google.maps.Marker({\n            position: location,\n            map: GoogleMap,\n          });\n        });\n      }\n\n    });\n\n    \n  }, [props.list]);\n\n  return (\n    <div className={style[\"location-map-container\"]}>\n      <div id=\"map\" className={style[\"location-map\"]}></div>\n    </div>\n  );\n}\n\nexport default connect((state) => {\n  const { list } = state;\n  return { list };\n})(LocationMapShow);\n"]},"metadata":{},"sourceType":"module"}