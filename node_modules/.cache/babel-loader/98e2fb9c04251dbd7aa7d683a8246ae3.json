{"ast":null,"code":"var _jsxFileName = \"/Users/achilles/Documents/GitHub/Find-Location-React-Redux/src/views/components/location-map-show.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport { React, useEffect, useRef } from \"react\";\nimport style from \"../scss/location-map-show.module.scss\";\nimport Map from \"./Map\";\nimport { APIKey, initialLocation, mapStyle } from \"../../config/ConfigurationData\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\n\nfunction LocationMapShow(props) {\n  _s();\n\n  const mapRef = useRef(null);\n  useEffect(() => {\n    if (!google) return; //do dothing when window google undefined\n\n    const map = new google.maps.Map(mapRef.current, {\n      center: {\n        lat: 43.6532,\n        lng: -79.3832\n      },\n      //default center Toronto\n      zoom: 8\n    });\n\n    if (props.list.length > 0) {\n      props.list.map((userLocationObj, index) => {\n        const location = {\n          lat: userLocationObj.lat,\n          lng: userLocationObj.lng\n        };\n\n        if (index === props.list.length - 1) {\n          //Center map on latest user location\n          map.setCenter(location);\n        }\n\n        return new google.maps.Marker({\n          position: location,\n          map\n        });\n      });\n    }\n  }, [props.list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style[\"location-map-container\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: style[\"location-map\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationMapShow, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n\n_c = LocationMapShow;\nexport default connect(state => {\n  const {\n    list\n  } = state;\n  return {\n    list\n  };\n})(LocationMapShow);\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationMapShow\");","map":{"version":3,"sources":["/Users/achilles/Documents/GitHub/Find-Location-React-Redux/src/views/components/location-map-show.js"],"names":["connect","React","useEffect","useRef","style","Map","APIKey","initialLocation","mapStyle","Loader","google","window","LocationMapShow","props","mapRef","map","maps","current","center","lat","lng","zoom","list","length","userLocationObj","index","location","setCenter","Marker","position","state"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,MAAT,EAAiBC,eAAjB,EAAkCC,QAAlC,QAAkD,gCAAlD;AACA,SAASC,MAAT,QAAuB,2BAAvB;;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;;AAEA,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAMC,MAAM,GAAGX,MAAM,CAAC,IAAD,CAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,MAAL,EAAa,OADC,CACO;;AAErB,UAAMK,GAAG,GAAG,IAAIL,MAAM,CAACM,IAAP,CAAYX,GAAhB,CAAoBS,MAAM,CAACG,OAA3B,EAAoC;AAC9CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,OAAP;AAAgBC,QAAAA,GAAG,EAAE,CAAC;AAAtB,OADsC;AACL;AACzCC,MAAAA,IAAI,EAAE;AAFwC,KAApC,CAAZ;;AAKA,QAAIR,KAAK,CAACS,IAAN,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACzBV,MAAAA,KAAK,CAACS,IAAN,CAAWP,GAAX,CAAe,CAACS,eAAD,EAAkBC,KAAlB,KAA4B;AACzC,cAAMC,QAAQ,GAAG;AAAEP,UAAAA,GAAG,EAAEK,eAAe,CAACL,GAAvB;AAA4BC,UAAAA,GAAG,EAAEI,eAAe,CAACJ;AAAjD,SAAjB;;AAEA,YAAIK,KAAK,KAAKZ,KAAK,CAACS,IAAN,CAAWC,MAAX,GAAoB,CAAlC,EAAqC;AACnC;AACAR,UAAAA,GAAG,CAACY,SAAJ,CAAcD,QAAd;AACD;;AAED,eAAO,IAAIhB,MAAM,CAACM,IAAP,CAAYY,MAAhB,CAAuB;AAC5BC,UAAAA,QAAQ,EAAEH,QADkB;AAE5BX,UAAAA;AAF4B,SAAvB,CAAP;AAID,OAZD;AAaD;AACF,GAvBQ,EAuBN,CAACF,KAAK,CAACS,IAAP,CAvBM,CAAT;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAElB,KAAK,CAAC,wBAAD,CAArB;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEU,MAAV;AAAkB,MAAA,SAAS,EAAEV,KAAK,CAAC,cAAD;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjCQQ,e;;KAAAA,e;AAmCT,eAAeZ,OAAO,CAAE8B,KAAD,IAAW;AAChC,QAAM;AAAER,IAAAA;AAAF,MAAWQ,KAAjB;AACA,SAAO;AAAER,IAAAA;AAAF,GAAP;AACD,CAHqB,CAAP,CAGZV,eAHY,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { React, useEffect, useRef } from \"react\";\nimport style from \"../scss/location-map-show.module.scss\";\n\nimport Map from \"./Map\";\nimport { APIKey, initialLocation, mapStyle } from \"../../config/ConfigurationData\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\nconst google = window.google;\n\nfunction LocationMapShow(props) {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    if (!google) return; //do dothing when window google undefined\n\n    const map = new google.maps.Map(mapRef.current, {\n      center: { lat: 43.6532, lng: -79.3832 }, //default center Toronto\n      zoom: 8,\n    });\n\n    if (props.list.length > 0) {\n      props.list.map((userLocationObj, index) => {\n        const location = { lat: userLocationObj.lat, lng: userLocationObj.lng };\n\n        if (index === props.list.length - 1) {\n          //Center map on latest user location\n          map.setCenter(location);\n        }\n\n        return new google.maps.Marker({\n          position: location,\n          map,\n        });\n      });\n    }\n  }, [props.list]);\n\n  return (\n    <div className={style[\"location-map-container\"]}>\n      <div ref={mapRef} className={style[\"location-map\"]}></div>\n    </div>\n  );\n}\n\nexport default connect((state) => {\n  const { list } = state;\n  return { list };\n})(LocationMapShow);\n"]},"metadata":{},"sourceType":"module"}